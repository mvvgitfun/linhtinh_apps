import streamlit as st
import pandas as pd
import random
import time

# ===== Config =====
LIST_A_URL = "https://raw.githubusercontent.com/mvvgitfun/linhtinh_apps/main/listA.xlsx"
LIST_B_URL = "https://raw.githubusercontent.com/mvvgitfun/linhtinh_apps/main/listB.xlsx"

predefined_pairs = [
    ("L√™ Hu·ª≥nh Minh Tr√≠", "Lan Nguy·ªÖn"),
    ("L√™ ƒê√¨nh Ti·∫øn ƒê·∫°t", "Ng√¥ Th·ªã Tr√∫c Linh"),
    ("V√µ Nh·∫≠t Minh", "Chu ƒêƒÉng Khoa"),
    ("Nguy·ªÖn Ho√†ng Vi·ªát", "Nguy·ªÖn M·∫°nh C∆∞·ªùng"),
    ("Thanh Tr∆∞·ªùng", "Th·∫£o Ng√¢n"),
    ("Nguy·ªÖn L√¢m T√πng", "Nguy·ªÖn Th·ªã Th√πy Linh"),
    ("L√™ Th·ªã Ng·ªçc B√≠ch", "V≈© Th·∫ø Tr·ªçng"),
    ("Anh Tu√¢n", "Gia B·∫£o")
]

# ===== Functions =====
def load_data():
    list_a = pd.read_excel(LIST_A_URL)["Name"].dropna().tolist()
    list_b = pd.read_excel(LIST_B_URL)["Name"].dropna().tolist()
    return list_a, list_b

# ===== UI =====
st.set_page_config(page_title="Random Badminton Pairs", layout="centered")

# Banner (auto resize full width)
st.image("https://raw.githubusercontent.com/mvvgitfun/linhtinh_apps/blob/main/phuocnguyenthanh.jpg", use_container_width=True)

st.title("üè∏ Random Gh√©p C·∫∑p C·∫ßu L√¥ng")

list_a, list_b = load_data()

# Hi·ªán b·∫£ng 2 list
col1, col2 = st.columns(2)
with col1:
    st.subheader("Danh s√°ch A")
    st.table(pd.DataFrame({"T√™n": list_a}))
with col2:
    st.subheader("Danh s√°ch B")
    st.table(pd.DataFrame({"T√™n": list_b}))

# Shuffle & hi·ªÉn th·ªã k·∫øt qu·∫£
if st.button("üé≤ Random c·∫∑p ƒë·∫•u"):
    placeholder = st.empty()

    # Shuffle effect
    for _ in range(10):
        temp_pairs = list(zip(random.sample(list_a, len(list_a)), random.sample(list_b, len(list_b))))
        temp_text = "\n".join([f"C·∫∑p {i+1}: {a} - {b}" for i, (a, b) in enumerate(temp_pairs)])
        placeholder.markdown(f"```\n{temp_text}\n```")
        time.sleep(0.2)

    # K·∫øt qu·∫£ cu·ªëi c√πng
    final_pairs = []
    used_a, used_b = set(), set()

    for a, b in predefined_pairs:
        if a in list_a and b in list_b:
            final_pairs.append((a, b))
            used_a.add(a)
            used_b.add(b)

    remaining_a = [x for x in list_a if x not in used_a]
    remaining_b = [x for x in list_b if x not in used_b]
    random.shuffle(remaining_a)
    random.shuffle(remaining_b)

    for a, b in zip(remaining_a, remaining_b):
        final_pairs.append((a, b))

    # Hi·ªÉn th·ªã k·∫øt qu·∫£ cu·ªëi c√πng
    result_text = "\n".join([f"C·∫∑p {i+1}: {a} - {b}" for i, (a, b) in enumerate(final_pairs)])
    placeholder.markdown(f"### ‚úÖ K·∫øt qu·∫£ cu·ªëi c√πng\n\n```\n{result_text}\n```")
